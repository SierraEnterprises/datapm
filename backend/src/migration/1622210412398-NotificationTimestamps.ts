import { MigrationInterface, QueryRunner } from "typeorm";

const sql = `

    alter table activity_log alter column event_type type activity_log_event_type_enum using event_type::activity_log_event_type_enum;

    ALTER TYPE activity_log_event_type_enum ADD VALUE 'CATALOG_PACKAGE_ADDED';
    ALTER TYPE activity_log_event_type_enum ADD VALUE 'CATALOG_PACKAGE_REMOVED';
    
    DROP FROM "follow";
    ALTER TABLE "follow" DROP COLUMN event_types;
    ALTER TABLE "follow" ADD COLUMN event_types activity_log_event_type_enum[];



CREATE AGGREGATE array_accum (anyarray)
(
    sfunc = array_cat,
    stype = anyarray,
    initcond = '{}'
);  


DROP SEQUENCE IF EXISTS platform_state_id_seq;
CREATE TABLE IF NOT EXISTS platform_state (
    id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY UNIQUE,
    key VARCHAR NOT NULL UNIQUE,
    serialized_state VARCHAR,
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);
CREATE UNIQUE INDEX IF NOT EXISTS platform_state_key_index ON platform_state (key);

`;

export class NotificationTimestamps1622210412398 implements MigrationInterface {
    public async up(queryRunner: QueryRunner): Promise<void> {
        queryRunner.query(sql);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {}
}
