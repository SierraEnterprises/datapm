name: "Build Clients"

on:
    push:
        branches:
            - no-bytecode

jobs:
    build-client-linux-intel64:
        runs-on: ubuntu-latest
        timeout-minutes: 15
        name: Build Linux executables
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v2
              with:
                  node-version: "16.13.2"

            - name: Install Build Tools
              run: sudo apt-get install g++ gcc make

            - name: Install Lib Dependencies
              run: npm ci
              working-directory: lib

            - name: Build Lib
              run: npm run build
              working-directory: lib

            - name: Install client dependencies
              run: npm ci
              working-directory: client

            - name: Run build
              run: npm run build
              working-directory: client

            - name: Build Linux Intel64 executables
              run: npm run package:linux:intel64
              working-directory: client

            - name: "Save Linux Intel 64bit Executable"
              uses: actions/upload-artifact@v2
              with:
                  name: datapm-macos-intel64-executable
                  path: client/pkg-linux-intel64
                  retention-days: 1

    build-client-windows-intel64:
        runs-on: windows-latest
        timeout-minutes: 15
        name: Build Windows Client Installer
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v2-beta
              with:
                  node-version: "16.13.2"

            - name: Presinstall node-gyp cache
              run: npx node-gyp install 16.13.2

            - name: Install Lib dependencies
              working-directory: lib
              run: npm ci

            - name: Build Lib
              working-directory: lib
              run: npm run build

            - name: Install client dependencies
              working-directory: client
              run: npm ci

            - name: Build Client
              working-directory: client
              run: npm run build

            - name: Build Windows executables
              run: npm run package:win:intel64
              working-directory: client

            - run: npm run package:win:bundle
              working-directory: client
              env:
                  CERTIFICATE_BASE64: ${{ secrets.WINDOWS_CLIENT_CERTIFICATE_BASE64 }}
                  CERTIFICATE_PASSWORD: ${{ secrets.WINDOWS_CLIENT_CERTIFICATE_PASSWORD }}

            - name: "Save Windows Executable"
              uses: actions/upload-artifact@v2
              with:
                  name: client-windows
                  path: client/installers/windows/dist/datapm-*.msix
                  retention-days: 5

    build-client-macos-intel64:
        runs-on: macos-latest
        timeout-minutes: 25
        name: Build MacOS Client Installer
        steps:
            - uses: actions/checkout@v2

            - name: get-npm-version
              id: package-version
              run: echo ::set-output name=DATAPM_VERSION::`jq .version package.json  | tr -d '"'`

            - uses: actions/checkout@v2
            - uses: actions/setup-node@v2
              with:
                  node-version: "16.13.2"

            - name: Install Lib Dependencies
              run: npm ci
              working-directory: lib

            - name: Build Lib
              run: npm run build
              working-directory: lib

            - name: Install client dependencies
              run: npm ci
              working-directory: client

            - name: Run build
              run: npm run build
              working-directory: client

            - name: Build MacOS Intel64 executables
              run: npm run package:macos:intel64
              working-directory: client

            - name: Codesign & Generate MacOS Installer
              env:
                  MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
                  MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
                  MACOS_INSTALLER_CERTIFICATE: ${{ secrets.MACOS_INSTALLER_CERTIFICATE }}
                  MACOS_INSTALLER_CERTIFICATE_PWD: ${{ secrets.MACOS_INSTALLER_CERTIFICATE_PWD }}
                  MACOS_KEYCHAIN_TEMPORARY_PASSWORD: ${{ secrets.MACOS_KEYCHAIN_TEMPORARY_PASSWORD }}
                  APPLE_DEVELOPER_CERTIFICATE_ID: ${{secrets.APPLE_DEVELOPER_CERTIFICATE_ID}}
                  DATAPM_VERSION: ${{ steps.package-version.outputs.DATAPM_VERSION}}
                  APPLE_ID: ${{ secrets.APPLE_ID }}
                  APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
                  APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
              run: ./installers/macos/sign-apps.sh
              working-directory: client

            - name: "Create MacOS Installer Artifact"
              uses: actions/upload-artifact@v2
              with:
                  name: client-macos
                  path: ./client/installers/macos/macOS-x64/target/pkg-signed/*.pkg
                  retention-days: 7
